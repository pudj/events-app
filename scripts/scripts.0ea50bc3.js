"use strict";angular.module("eventsAppApp",["firebase","ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).constant("FIREBASE_URL","https://myeventsnathan.firebaseio.com/").config(["$routeProvider",function(a){a.when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl",controllerAs:"registry"}).when("/login",{templateUrl:"views/login.html",controller:"RegisterCtrl",controllerAs:"registry"}).when("/events",{templateUrl:"views/events.html",controller:"eventsCtrl",controllerAs:"eventsc",resolve:{currentAuth:["Authentication",function(a){return a.requireAuth()}]}}).otherwise({redirectTo:"/login"})}]),angular.module("eventsAppApp").controller("RegisterCtrl",["$scope","Authentication",function(a,b){a.login=function(){b.login(a.user)},a.logout=function(){b.logout()},a.register=function(){b.register(a.user)}}]),angular.module("eventsAppApp").controller("eventsCtrl",["$scope","$rootScope","$firebaseAuth","$firebaseArray","FIREBASE_URL",function(a,b,c,d,e){var f=new Firebase(e),g=c(f);g.$onAuth(function(c){if(c){var f=new Firebase(e+"users/"+b.currentUser.$id+"/events"),g=d(f);a.events=g,a.addEvent=function(){g.$add({name:a.eventname,date:Firebase.ServerValue.TIMESTAMP}).then(function(){a.eventname=""})},a.deleteEvent=function(a){g.$remove(a)}}})}]),angular.module("eventsAppApp").factory("Authentication",["$rootScope","$firebaseAuth","$firebaseObject","$location","FIREBASE_URL",function(a,b,c,d,e){var f=new Firebase(e),g=b(f);g.$onAuth(function(b){if(b){var d=new Firebase(e+"users/"+b.uid),f=c(d);a.currentUser=f}else a.currentUser=""});var h={login:function(b){g.$authWithPassword({email:b.email,password:b.password}).then(function(a){d.path("/events")})["catch"](function(b){a.message=b.message})},logout:function(){return g.$unauth()},requireAuth:function(){return g.$requireAuth()},register:function(b){g.$createUser({email:b.email,password:b.password}).then(function(c){new Firebase(e+"users").child(c.uid).set({date:Firebase.ServerValue.TIMESTAMP,regUser:c.uid,firstname:b.firstname,lastname:b.lastname,email:b.email});a.message="Hi "+b.firstname+", Thanks for registering"})["catch"](function(b){a.message=b.message})}};return h}]),angular.module("eventsAppApp").run(["$templateCache",function(a){a.put("views/events.html",'<div class="card events cf"> <div class="textintro"> <h1>MyEvents Dashboard</h1> <p>Create your event</p> </div> <form class="formgroup addevent cf" name="myform" ng-submit="addEvent()" novalidate> <div class="inputwrapper"> <input type="text" name="eventname" placeholder="Event name" ng-model="eventname" ng-required="true"> </div> <button type="submit" class="btn" ng-disabled="myform.$invalid">+</button> </form> <h2>My Events</h2> <div class="events" ng-repeat="(key, event) in events"> <button class="btn" ng-click="deleteEvent(key)">Delete </button> <!-- key = FB hash --> <span class="text">{{ event.name }}</span> </div> </div>'),a.put("views/login.html",'<section class="card login"> <form name="myform" ng-submit="login()" novalidate> <div class="textintro"> <h1>Hi there!</h1> <p class="message" ng-show="message">{{ message }}</p> </div> <fieldset> <input type="email" name="email" placeholder="Email" ng-model="user.email" ng-require="true"> <p class="error validationerror" ng-show="myform.email.$invalid && myform.email.$touched">Must be a valid email</p> <input type="password" name="password" placeholder="Password" ng-model="user.password" ng-require="true"> <p class="error validationerror" ng-show="myform.password.$invalid && myform.password.$touched">Must be a valid password</p> </fieldset> <button type="submit" class="btn" ng-disabled="myform.$invalid">Login</button> <p>or <a id="a-register" ng-href="#/register">Register</a></p> </form> </section>'),a.put("views/nav.html",'<div class="branding"><a ng-href="#">EventsApp</a></div> <ul> <li><a ng-hide="currentUser" ng-href="#/login">Login</a></li> <li><a ng-hide="currentUser" ng-href="#/register">Register</a></li> </ul>'),a.put("views/register.html",'<section class="card register"> <form name="myform" ng-submit="register()" novalidate> <!-- v2 error ako je isti naziv funkcije --> <div class="textintro"> <h1>Register</h1> <p>For a better event management</p> <p class="message" ng-show="message">{{ message }}</p> </div> <fieldset> <input type="text" name="firstname" placeholder="First Name" ng-model="user.firstname" ng-required="true"> <p class="error validationerror" ng-show="myform.firstname.$invalid && myform.firstname.$touched"> First name required</p> <input type="text" name="lastname" placeholder="Last Name" ng-model="user.lastname" ng-required="true"> <p class="error validationerror" ng-show="myform.lastname.$invalid && myform.lastname.$touched"> Last name required</p> <input type="email" name="email" placeholder="Email" ng-model="user.email" ng-required="true"> <p class="error validationerror" ng-show="myform.email.$invalid && myform.email.$touched"> Must be a valid email</p> <input type="password" name="password" placeholder="Password" ng-model="user.password" ng-required="true"> <p class="error validationerror" ng-show="myform.password.$invalid && myform.email.$touched"> Password is required</p> </fieldset> <button type="submit" class="btn" ng-disabled="myform.$invalid">Register</button> <p>or <a id="a-login" ng-href="#/login">login</a></p> </form> </section>')}]);